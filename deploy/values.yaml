# Default values for oddsbender-scrapers.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

basketball:
  enabled: false
  image: 
    repostory: registry.oddsbender.com/oddsbender/basketball
    tag: latest
  master:
    autoscaling:
      enabled: false
    command: test
    args: test
    

football:
  enabled: false
  image: 
    repostory: registry.oddsbender.com/oddsbender/football
    tag: latest
  master:
    autoscaling:
      enabled: false
    command: test
    args: test

dataLoader:
  enabled: false
  image: 
    repository:  registry.oddsbender.com/oddsbender/core
    tag: latest
  replicaCount: 1
  autoscaling:
    enabled: false
  command:
    - python3
  args:
    - db_data_loader_football.py
  env:
    - name: APPLICATION_NAME
      value: dataloader
  nodeSelector: {}
  affinity: {}
  tolerations: []

master:
  replicaCount: 1
  image: 
    repository:  registry.oddsbender.com/oddsbender/core
    tag: latest
  autoscaling:
    enabled: false
  command: 
    - python3
  args:
    - master_scheduler.py 
  resources:
    requests:
      cpu: 500m
      memory: "1Gi"
    limits:
      cpu: 1
      memory: "5Gi"

gameScheduler:
  enabled: false
  image:
    repository: registry.oddsbender.com/oddsbender/core
    tag: latest
  kubernetesPrefix: ''
  nodeSelector: {}
  affinity: {}
  tolerations: []
  serviceAccount:
    create: true
    annotations: {}

scaleCron:
  enabled: true
  jobs:
    - name:  scale-down
      replicas: 0
      failedJobsHistoryLimit: 0
      successfulJobsHistoryLimit: 0
      schedule:  "0 5 * * *"

replicaCount: 1
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

redis:
  enabled: false
  host: ''

common:
  nodeSelector: {}

scaleCron:
  enabled: false

redisCleanUp:
  enabled: false

podCleanup:
  enabled: false

rabbitmq:
  enabled: false

secretStore:
  secretName: oddsbender-backend

config:
  redis_host: ''
  redis_port: ''
  postgres_user: ''
  postgres_host: ''
  postgres_port: ''
  postgres_dbname: ''
  amqp_host: ''